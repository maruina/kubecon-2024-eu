name: CI

on:
  push:
    tags:
      - 'v*'

jobs:
  docker:
    name: docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
              ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{raw}}
          flavor: |
            latest=true

      - name: Generate build-args
        id: build-args
        run: |
          echo "GIT_COMMIT=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "GIT_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Inspect builder
        run: |
          echo "Name:       ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:   ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:     ${{ steps.buildx.outputs.status }}"
          echo "Flags:      ${{ steps.buildx.outputs.flags }}"
          echo "Platforms:  ${{ steps.buildx.outputs.platforms }}"
          echo "Tags:       ${{ steps.meta.outputs.tags }}"
          echo "Labels:     ${{ steps.meta.outputs.labels }}"
          echo "Git commit: ${{ env.GIT_COMMIT }}"
          echo "Git tag:    ${{ env.GIT_TAG }}"

      - name: Login to GitHub Packages
        uses: docker/login-action@v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build a docker image
        uses: docker/build-push-action@v5.2.0
        with:
          file: Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          build-args: |
            GIT_TAG=${{ env.GIT_TAG }}
            GIT_COMMIT=${{ env.GIT_COMMIT }}
